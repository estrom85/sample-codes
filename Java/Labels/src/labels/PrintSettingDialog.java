/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * printSettingsDialog.java
 *
 * Created on 17.7.2012, 9:21:23
 */
package labels;

import java.awt.Color;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.JDialog;
import javax.swing.JFrame;

/**
 *
 * @author martinm
 */
public class PrintSettingDialog extends JDialog {
    private CLabel label;
    private boolean printed[][];
    /** Creates new form printSettingsDialog */
    public PrintSettingDialog(JFrame parent, CLabel label) {
        super(parent,"Nastavenie tlačových oblastí",true);
        this.label=label;
        printed=new boolean[4][4];
        setLabels();
        this.setBounds(parent.getBounds().x+20, parent.getBounds().y+20, 380, 360);
        initComponents();
        display.addMouseListener(new MouseAdapter() {

            @Override
            public void mouseClicked(MouseEvent e) {
                labelMouseClicked(e);
            }
            
        });
        
        this.addWindowListener(new WindowAdapter(){
                    @Override
                    public void windowClosed(WindowEvent e) {
                        closeWindow();
                    }});
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        display = new java.awt.Canvas(){
            @Override
            public void paint(Graphics g){
                paintLabels(g);
            }
        };
        jLabel1 = new javax.swing.JLabel();
        all = new javax.swing.JButton();
        none = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setLayout(null);
        add(display);
        display.setBounds(10, 30, 350, 200);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Nastavte štítky, ktoré chcete tlačiť");
        add(jLabel1);
        jLabel1.setBounds(10, 10, 350, 14);

        all.setText("Označiť všetky");
        all.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allActionPerformed(evt);
            }
        });
        add(all);
        all.setBounds(10, 240, 110, 23);

        none.setText("Vymazať všetky");
        none.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noneActionPerformed(evt);
            }
        });
        add(none);
        none.setBounds(240, 240, 120, 23);

        jButton3.setText("Nastaviť");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3);
        jButton3.setBounds(70, 290, 90, 23);

        jButton4.setText("Zrušiť");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        add(jButton4);
        jButton4.setBounds(210, 290, 80, 23);
    }// </editor-fold>//GEN-END:initComponents

private void allActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allActionPerformed
// TODO add your handling code here:
    for (int x=0;x<4;x++){
        for(int y=0;y<4;y++){
            printed[x][y]=true;
        }
    }
    display.repaint();
}//GEN-LAST:event_allActionPerformed

private void noneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noneActionPerformed
// TODO add your handling code here:
    for (int x=0;x<4;x++){
        for(int y=0;y<4;y++){
            printed[x][y]=false;
        }
    }
    display.repaint();
}//GEN-LAST:event_noneActionPerformed

private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
// TODO add your handling code here:
    closeWindow();
}//GEN-LAST:event_jButton4ActionPerformed

private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
// TODO add your handling code here:
    for (int x=0;x<4;x++){
        for(int y=0;y<4;y++){
            label.setPrintPosition(y, x, printed[x][y]);
        }
    }
    closeWindow();
}//GEN-LAST:event_jButton3ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton all;
    private java.awt.Canvas display;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton none;
    // End of variables declaration//GEN-END:variables

    private void paintLabels(Graphics g){
        int width=display.getWidth()/4;
        int height=display.getHeight()/4;
        for(int x=0;x<4;x++){
            for(int y=0;y<4;y++){
                g.setColor(Color.BLACK);
                g.fillRect(y*width, x*height, width, height);
                if(printed[x][y]){
                    g.setColor(Color.WHITE);
                    g.fillRect(y*width+2, x*height+2, width-4, height-4);
                    int i=x+y*4+1;
                    String index=Integer.toString(i);
                    g.setColor(Color.BLACK);
                    g.setFont(new Font("Arial",Font.BOLD,30));
                    FontMetrics fontMetrics=g.getFontMetrics();
                    int fontX=y*width+(width-fontMetrics.stringWidth(index))/2;
                    int fontY=x*height+height/2+15;
                    
                    g.drawString(index, fontX, fontY);
                }
                else
                {
                    g.setColor(Color.GRAY);
                    g.fillRect(y*width+2, x*height+2, width-4, height-4);
                }
                
            }
        }
    }
    private void labelMouseClicked(MouseEvent e){
        int width=display.getWidth()/4;
        int height=display.getHeight()/4;
        int y=e.getX()/width;
        int x=e.getY()/height;
        printed[x][y]=!printed[x][y];
        display.repaint();
    }
    
    private void closeWindow(){
        this.setVisible(false);
    }
    public void openDialog(){
        setLabels();
        this.setVisible(true);
    }
    
    private void setLabels(){
         for(int x=0;x<4;x++){
            for(int y=0;y<4;y++){
                printed[x][y]=label.getPrintPosition(y, x);
            }
        }
    }
}
